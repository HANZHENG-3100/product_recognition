# Find Python and boost python
if(USE_PYTHON EQUAL 2)
	find_package(PythonInterp 2.7 REQUIRED)
	find_package(PythonLibs 2.7 REQUIRED)
	find_package(NumPy REQUIRED)
	if (NOT USE_EXTERNAL_BOOST)
		find_package(Boost COMPONENTS python REQUIRED)
	endif()
else()
	find_package(PythonInterp 3.3 REQUIRED)
	find_package(PythonLibs 3.3 REQUIRED)
	find_package(NumPy REQUIRED)
	if (NOT USE_EXTERNAL_BOOST)
		find_package(Boost COMPONENTS python-py34)
		if(NOT Boost_FOUND)
			find_package(Boost COMPONENTS python-py33)
		endif()
		if(NOT Boost_FOUND)
			find_package(Boost COMPONENTS python3 REQUIRED)
		endif()
	endif()
endif()

include_directories( ${Boost_INCLUDE_DIRS} ${PYTHON_INCLUDE_DIRS} ${NUMPY_INCLUDE_DIRS} )
link_directories( ${Boost_LIBRARY_DIR} )

# Find zlib to load the datasets
find_package( ZLIB )
set(DATASET_SRC "" )
set(DATASET_LIB "" )
if( ZLIB_FOUND )
	set(DATASET_SRC dataset.cpp )
	set(DATASET_LIB dataset )
	add_subdirectory(dataset)
	add_definitions(-DUSE_DATASET)
endif()

file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/__init__.py" "" )

if( UNIX )
	# Disable the pointer-to-function and pointer-to-object warnings
	add_definitions( -Wno-unused-local-typedefs )
	set_property(SOURCE util.cpp PROPERTY COMPILE_FLAGS -w )
endif()

add_library( lpo SHARED lpo.cpp boost.cpp util.cpp contour.cpp ${DATASET_SRC} imgproc.cpp learning.cpp segmentation.cpp crf.cpp proposals.cpp )
target_link_libraries( lpo util ${Boost_LIBRARIES} ${PYTHON_LIBRARIES} ${DATASET_LIB} imgproc learning contour segmentation crf proposals )
set_target_properties( lpo PROPERTIES PREFIX "")
if(APPLE)
	set_target_properties( lpo PROPERTIES SUFFIX ".so" )
endif()
